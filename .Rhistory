q()
install.packages("caret", repos='http://cran.rstudio.com/')
q()
install.packages("ElemStatLearn")
install.packages("pgmm")
q()
require(devtools)
install_github('rCharts', 'ramnathv')
install_github('rCharts', 'ramnathv')
install_github('rCharts', 'ramnathv')
install_github('rCharts', 'ramnathv')
install_github('rCharts', 'ramnathv')
install_github('rCharts', 'ramnathv')
install_github('rCharts', 'ramnathv')
install_github('rCharts', 'ramnathv')
install_github('rCharts', 'ramnathv')
install_github('rCharts', 'ramnathv')
dTable()
q()
require(rCharts)
haireye = as.data/frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex= 'Male')
)
n1$save('fig/n1.html', cdn = TRUE)
cat('<iframe src= "fig/n1.html" width= 100%, height = 600></iframe>')
nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex= 'Male')
)
require(rCharts)
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex= 'Male')
)
n1$save('fig/n1.html', cdn = TRUE)
cat('<iframe src= "fig/n1.html" width= 100%, height = 600></iframe>')
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex= 'Male')
)
n1$save('n1.html', cdn = TRUE)
cat('<iframe src= "fig/n1.html" width= 100%, height = 600></iframe>')
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex= 'Male')
)
n1$save('n1.html', cdn = TRUE)
cat('<iframe src= "fig/n1.html" width= 100%, height = 600></iframe>')
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex= 'Male')
)
n1$save('n1.html', cdn = TRUE)
cat('<iframe src= "n1.html" width= 100%, height = 600></iframe>')
nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex= 'Male')
)
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex= 'Male')
)
n1$save('n1.html', cdn = TRUE)
n1
n1
cat('<iframe src= "n1.html" width= 100%, height = 600></iframe>')
source('~/.active-rstudio-document')
cat('<iframe src= "n1.html" width= 100%, height = 600></iframe>')
cat('<iframe src= "n1.html" width= 100%, height = 600></iframe>')
require(rCharts)
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex= 'Male')
)
n1$save('n1.html', cdn = TRUE)
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex= 'Male')
)
n1$save('n1.html', cdn = TRUE)
cat('<iframe src= "n1.html" width= 100%, height = 600></iframe>')
source('~/.active-rstudio-document')
n1$show(static = FALSE)
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex= 'Male')
)
n1$save('n1.html', cdn = TRUE)
cat('<iframe src= "n1.html" width= 100%, height = 600></iframe>')
options(viewer=NULL)
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex= 'Male')
)
n1$save('n1.html', cdn = TRUE)
cat('<iframe src= "n1.html" width= 100%, height = 600></iframe>')
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex= 'Male')
)
n1$save('n1.html', cdn = TRUE)
cat('<iframe src= "n1.html" width= 100%, height = 600></iframe>')
source('~/.active-rstudio-document')
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex= 'Male')
)
n1$save('n1.html', cdn = TRUE)
cat('<iframe src= "n1.html" width= 100%, height = 600></iframe>')
n1$show("server")
n1$
n1$html
n1$html()
names(iris)
names(iris) = gsub("\\.", "", names(iris))
names(iris)
names(iris) = gsub("\\.", "", names(iris))
r1 <- rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = 'Species', type = 'point')
r1$save('fig/r1.html',  cdn = TRUE)
r1$show("server")
hair_eye = as.data.frame(HairEyeColor)
r2 <- rPlot(Freq ~ Hair Z Eye. color = 'Eye', data= hair_eye, type = 'bar')
r2$show("server")
hair_eye = as.data.frame(HairEyeColor)
r2 <- rPlot(Freq ~ Hair | Eye. color = 'Eye', data= hair_eye, type = 'bar')
r2$show("server")
hair_eye = as.data.frame(HairEyeColor)
r2 <- rPlot(Freq ~ Hair | Eye, color = 'Eye', data= hair_eye, type = 'bar')
r2$show("server")
data(economics, package = "ggplot2")
econ <- transform(economics, date = as.character(date))
m1 <- mPlot(x="date", y = c("psavert", "uempmed"), type = "Line", data= econ)
m1$set(pointSize = 0, lineWidth = 1)
m1$show("server)
m1$show("server")
map3<- Leaflet$new()
map3$setView(c(51.505, -0.09), zoom=13)
map3$marker(c(51.5, -0.09), bindPopup= "<p>Hi. I am a popup</p>")
map3$marker(c(51.495, -0.083), bindPopup = "<p>Hi. I am another popup</p>")
map3$show("server")
usp = reshape2::melt(USPersonalExpenditure)
usp$Var2 <- as.numeric(as.POSIXct(paste0(usp$Var2, "-01-01")))
p4<- Rickshaw$new()
p4$layer(value ~ Var2, group = "Var1", data = usp, type = "area", width = 560)
p4$set(slider = TRUE)
p4$show("server")
p4$save('p4.html', cdn= TRUE)
usp = reshape2::melt(USPersonalExpenditure)
usp$Var2 <- as.numeric(as.POSIXct(paste0(usp$Var2, "-01-01")))
p4<- Rickshaw$new()
p4$layer(value ~ Var2, group = "Var1", data = usp, type = "area", width = 560)
p4$set(slider = TRUE)
p4$show("server")
suppressPackageStartupMessages(library(googleVis))
install.packages("googlevis")
install.packages("googleVis")
suppressPackageStartupMessages(library(googleVis))
M<- gvisMotionChart(Fruits, "Fruit", "Year", options = list(width = 600, height = 400))
print(M, "chart")
plot(M, "chart")
plot(M)
print(M)
M$show("server")
plot(M)
G<- gvisGeoChart(Exports, locationvar = "Country", colorvar = "Profit", options = list(width = 600, height = 400))
plot(G)
G2<- gvisGeoChart(Exports, locationvar = "Country", colorvar = "profit", options = list(width = 600, height = 400, region = "150"))
plot(G2)
G<- gvisGeoChart(Exports, locationvar = "Country", colorvar = "Profit", options = list(width = 600, height = 400))
plot(G)
G2<- gvisGeoChart(Exports, locationvar = "Country", colorvar = "profit", options = list(width = 600, height = 400, region = 150))
plot(G2)
G <- gvisGeoChart(Exports, "Country", "Profit", options = list(width = 200, height = 100))
T1 <- gvisTable(Exports, options = list(width = 200, height = 270))
M <- gvisMotionChart(Fruits, "Fruit", "Year", options = list(width = 400, height = 370))
GT<- gvisMerge(G, T1, horizontal = FALSE)
GTM <- gcisMerge(GT, M, horizontal = TRUE, tableOptions = "bgcolor = \"#CCCCCC\" cellspacing = 10")
GTM <- gvisMerge(GT, M, horizontal = TRUE, tableOptions = "bgcolor = \"#CCCCCC\" cellspacing = 10")
plot(GTM)
M <- gvisMotionChart(Fruits, "Fruit", "Year", options = list(width = 400, height = 370))
plot(<M)
plot(M)
shiny::runApp('C:/Users/user1/Downloads/Developing Data Products/shiner')
shiny::runApp('C:/Users/user1/Downloads/Developing Data Products/prediction')
shiny::runApp('C:/Users/user1/Desktop/Ruth3/Office2015/Project Ruth/prediction with Shiny')
shiny::runApp('C:/Users/user1/Desktop/Ruth3/Office2015/Project Ruth/prediction with Shiny')
shiny::runApp('C:/Users/user1/Desktop/Ruth3/Office2015/Project Ruth/prediction with Shiny')
shiny::runApp('C:/Users/user1/Desktop/Ruth3/Office2015/Project Ruth/prediction with Shiny')
shiny::runApp('C:/Users/user1/Desktop/Ruth3/Office2015/Project Ruth/prediction with Shiny')
shiny::runApp('C:/Users/user1/Desktop/Ruth3/Office2015/Project Ruth/prediction with Shiny')
shiny::runApp('C:/Users/user1/Desktop/Ruth3/Office2015/Project Ruth/prediction with Shiny')
shiny::runApp('C:/Users/user1/Desktop/Ruth3/Office2015/Project Ruth/prediction with Shiny')
shiny::runApp('C:/Users/user1/Desktop/Ruth3/Office2015/Project Ruth/prediction with Shiny')
shiny::runApp('C:/Users/user1/Downloads/shiny/downloads')
shiny::runApp('C:/Users/user1/Downloads/shiny/downloads')
shiny::runApp('C:/Users/user1/Downloads/Developing Data Products/courseProject')
shiny::runApp('C:/Users/user1/Downloads/Developing Data Products/courseProject')
shiny::runApp('C:/Users/user1/Downloads/Developing Data Products/courseProject')
shiny::runApp('C:/Users/user1/Downloads/Developing Data Products/courseProject')
shiny::runApp('C:/Users/user1/Downloads/Developing Data Products/courseProject')
shiny::runApp('C:/Users/user1/Downloads/Developing Data Products/courseProject')
shiny::runApp('C:/Users/user1/Downloads/Developing Data Products/courseProject')
shiny::runApp('C:/Users/user1/Downloads/Developing Data Products/courseProject')
shiny::runApp('C:/Users/user1/Downloads/Developing Data Products/courseProject')
shiny::runApp('C:/Users/user1/Downloads/Developing Data Products/courseProject')
shiny::runApp('C:/Users/user1/Downloads/Developing Data Products/courseProject')
shiny::runApp('C:/Users/user1/Downloads/Developing Data Products/courseProject')
shiny::runApp('C:/Users/user1/Downloads/Developing Data Products/courseProject')
shiny::runApp('C:/Users/user1/Downloads/Developing Data Products/courseProject')
